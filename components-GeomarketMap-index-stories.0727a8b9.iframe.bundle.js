"use strict";(self.webpackChunk_actinc_dls=self.webpackChunk_actinc_dls||[]).push([[3848],{"./src/components/GeomarketMap/index.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{CustomColor:()=>CustomColor,Default:()=>Default,MultipleSelectedGeomarkets:()=>MultipleSelectedGeomarkets,SelectedGeomarket:()=>SelectedGeomarket,__namedExportsOrder:()=>__namedExportsOrder,default:()=>index_stories});var playground=__webpack_require__("./src/helpers/playground.ts"),range=__webpack_require__("./node_modules/d3-array/src/range.js"),quantile=__webpack_require__("./node_modules/d3-scale/src/quantile.js");const defaultData=[{EPS_CODE:"MS-01",EPS_NAME:"Jackson",SOURCE_COUNT1:37264,SOURCE_COUNT2:47487,SOURCE_COUNT3:49788,STATE_CODE:"MS"},{EPS_CODE:"FL-07",EPS_NAME:"Collier, Hendry, & Monroe Co",SOURCE_COUNT1:4382,SOURCE_COUNT2:4687,SOURCE_COUNT3:4226,STATE_CODE:"FL"},{EPS_CODE:"CA-32",EPS_NAME:"Central Valley--North",SOURCE_COUNT1:19812,SOURCE_COUNT2:18554,SOURCE_COUNT3:13355,STATE_CODE:"CA"},{EPS_CODE:"OH-03",EPS_NAME:"City of Cleveland (West)",SOURCE_COUNT1:7669,SOURCE_COUNT2:8218,SOURCE_COUNT3:7233,STATE_CODE:"OH"},{EPS_CODE:"IN-09",EPS_NAME:"South Central Indiana",SOURCE_COUNT1:6930,SOURCE_COUNT2:6633,SOURCE_COUNT3:5265,STATE_CODE:"IN"},{EPS_CODE:"NJ-09",EPS_NAME:"Hudson Co",SOURCE_COUNT1:5404,SOURCE_COUNT2:5471,SOURCE_COUNT3:4476,STATE_CODE:"NJ"},{EPS_CODE:"TN-01",EPS_NAME:"Chattanooga",SOURCE_COUNT1:16989,SOURCE_COUNT2:22150,SOURCE_COUNT3:15835,STATE_CODE:"TN"},{EPS_CODE:"NH-02",EPS_NAME:"Merrimack Valley",SOURCE_COUNT1:3246,SOURCE_COUNT2:3234,SOURCE_COUNT3:2280,STATE_CODE:"NH"},{EPS_CODE:"AL-02",EPS_NAME:"Huntsville & Florence",SOURCE_COUNT1:20490,SOURCE_COUNT2:26773,SOURCE_COUNT3:27957,STATE_CODE:"AL"},{EPS_CODE:"TX-17",EPS_NAME:"City of Houston (East)",SOURCE_COUNT1:11452,SOURCE_COUNT2:11990,SOURCE_COUNT3:9168,STATE_CODE:"TX"},{EPS_CODE:"TX-14",EPS_NAME:"City of San Antonio",SOURCE_COUNT1:7587,SOURCE_COUNT2:9543,SOURCE_COUNT3:8476,STATE_CODE:"TX"},{EPS_CODE:"PA-10",EPS_NAME:"Southern Pennsylvania (East)",SOURCE_COUNT1:11557,SOURCE_COUNT2:10589,SOURCE_COUNT3:9214,STATE_CODE:"PA"}],defaultProcessDataFn=(featureCollection,data)=>{const{features}=featureCollection,scale=(0,quantile.A)().domain(data.map((item=>item.SOURCE_COUNT1))).range((0,range.A)(10)),mappedFeatures=data.reduce(((acc,{SOURCE_COUNT1,EPS_CODE,STATE_CODE})=>(acc[EPS_CODE]={quantity:SOURCE_COUNT1,stateCode:STATE_CODE},acc)),{});return{features:features.map((f=>{if(f.id&&mappedFeatures[f.id]){const properties={...f.properties,quantity:scale(mappedFeatures[f.id].quantity),stateCode:mappedFeatures[f.id].stateCode,value:mappedFeatures[f.id].quantity};return{...f,properties}}return{...f}})),type:"FeatureCollection"}};var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),useTheme=__webpack_require__("./node_modules/@mui/material/esm/styles/useTheme.js"),esm=__webpack_require__("./node_modules/@turf/bbox/dist/esm/index.js"),isString=__webpack_require__("./node_modules/lodash/isString.js"),isString_default=__webpack_require__.n(isString),numeral=__webpack_require__("./node_modules/numeral/numeral.js"),numeral_default=__webpack_require__.n(numeral),react=__webpack_require__("./node_modules/react/index.js"),react_default=__webpack_require__.n(react),Map=__webpack_require__("./src/components/Map/index.tsx"),MapPopup=__webpack_require__("./src/components/MapPopup/index.tsx");const GeomarketMap=({data,geoJSONPath,mapboxAccessToken,mapPopupProps,mapProps,onHoverInfo,processDataFn,selectedGeomarket,setOnHoverInfo,tooltipElement})=>{const{breakpoints,spacing}=(0,useTheme.A)(),[geomarketJSON,setGeomarketJSON]=react_default().useState(),[hoverInfo,setHoverInfo]=react_default().useState(),finalHoverInfo=onHoverInfo||hoverInfo;react_default().useEffect((()=>{fetch(geoJSONPath).then((resp=>resp.json())).then((json=>setGeomarketJSON(json))).catch((err=>console.error("Could not load data",err)))}),[]);const processedData=react_default().useMemo((()=>geomarketJSON&&processDataFn&&processDataFn(geomarketJSON,data)),[data,geomarketJSON,processDataFn]),initialBoundsPosition=react_default().useMemo((()=>{if(selectedGeomarket&&processedData){const features=processedData.features.filter((f=>selectedGeomarket.includes(f.id)));if(features.length>0){const[minLng,minLat,maxLng,maxLat]=(0,esm.A)({features,type:"FeatureCollection"});return{id:features.length>1?void 0:selectedGeomarket[0],position:[[minLng,minLat],[maxLng,maxLat]]}}}}),[processedData,selectedGeomarket]);if(!processedData)return(0,jsx_runtime.jsx)(jsx_runtime.Fragment,{});const parentHeight=mapProps?.height||450,parentWidth=mapProps?.width||"100%";return(0,jsx_runtime.jsx)(Map.A,{data:processedData,height:parentHeight,initialBoundsPosition,mapboxAccessToken,setHoverInfo:setOnHoverInfo||setHoverInfo,sourceProps:{promoteId:"id",type:"geojson"},width:parentWidth,...mapProps,children:tooltipElement||(finalHoverInfo&&(isString_default()(parentWidth)||parentWidth>breakpoints.values.sm-parseInt(spacing(12),10))?(0,jsx_runtime.jsx)(MapPopup.A,{popupProps:{latitude:finalHoverInfo.lat,longitude:finalHoverInfo.lng},rows:[{title:"Geomarket",value:finalHoverInfo.feature.properties?.name},{title:"Code",value:finalHoverInfo.feature.id},{title:"Volume",value:numeral_default()(finalHoverInfo.feature.properties?.value).format("0,0")}],...mapPopupProps}):void 0)})};try{GeomarketMap.displayName="GeomarketMap",GeomarketMap.__docgenInfo={description:"GeomarketMap component which under the hood uses mapbox and react-map-gl. For this to work it's necessary\nto add the link bellow in the head of your page: <link href='https://api.tiles.mapbox.com/mapbox-gl-js/v2.7.0/mapbox-gl.css' rel='stylesheet' />\nFor more information: https://visgl.github.io/react-map-gl/docs/get-started/get-started#styling",displayName:"GeomarketMap",props:{data:{defaultValue:null,description:"",name:"data",required:!0,type:{name:"IMapDataProps[]"}},geoJSONPath:{defaultValue:null,description:"",name:"geoJSONPath",required:!0,type:{name:"string"}},mapboxAccessToken:{defaultValue:null,description:"",name:"mapboxAccessToken",required:!0,type:{name:"string"}},mapPopupProps:{defaultValue:null,description:"",name:"mapPopupProps",required:!1,type:{name:"Partial<MapPopupProps>"}},mapProps:{defaultValue:null,description:"",name:"mapProps",required:!1,type:{name:'Omit<Partial<MapProps>, "mapboxAccessToken">'}},onHoverInfo:{defaultValue:null,description:"",name:"onHoverInfo",required:!1,type:{name:"FeatureHoverProps"}},processDataFn:{defaultValue:null,description:"",name:"processDataFn",required:!1,type:{name:"((featureCollection: FeatureCollection<Geometry, GeoJsonProperties>, data: IMapDataProps[]) => FeatureCollection<Geometry, GeoJsonProperties>)"}},selectedGeomarket:{defaultValue:null,description:"",name:"selectedGeomarket",required:!1,type:{name:"string[]"}},setOnHoverInfo:{defaultValue:null,description:"",name:"setOnHoverInfo",required:!1,type:{name:"((newHoverInfo: FeatureHoverProps) => void)"}},tooltipElement:{defaultValue:null,description:"",name:"tooltipElement",required:!1,type:{name:"ReactElement<unknown, string | JSXElementConstructor<any>>"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/GeomarketMap/index.tsx#GeomarketMap"]={docgenInfo:GeomarketMap.__docgenInfo,name:"GeomarketMap",path:"src/components/GeomarketMap/index.tsx#GeomarketMap"})}catch(__react_docgen_typescript_loader_error){}const index_stories={args:{data:defaultData,geoJSONPath:"maps/geomarkets.json",mapboxAccessToken:"pk.eyJ1IjoiaXRhZG1pbnMiLCJhIjoiY2wwdmVudmhpMTZvNjNqcG40NXp6Nnk3dCJ9.ThRd0y_bK_8RVfu_zDzTjQ",processDataFn:defaultProcessDataFn},argTypes:(0,playground.Q)({},GeomarketMap),component:GeomarketMap,tags:["autodocs"],title:"Molecules / Maps / GeomarketMap"},Default={},CustomColor={args:{mapProps:{color:"#FF0000"}}},SelectedGeomarket={args:{data:defaultData,geoJSONPath:"maps/geomarkets.json",processDataFn:defaultProcessDataFn,selectedGeomarket:["MS-01"]}},MultipleSelectedGeomarkets={args:{data:defaultData,geoJSONPath:"maps/geomarkets.json",processDataFn:defaultProcessDataFn,selectedGeomarket:["MS-01","MS-02"]}},__namedExportsOrder=["Default","CustomColor","SelectedGeomarket","MultipleSelectedGeomarkets"];Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:"{}",...Default.parameters?.docs?.source}}},CustomColor.parameters={...CustomColor.parameters,docs:{...CustomColor.parameters?.docs,source:{originalSource:"{\n  args: {\n    mapProps: {\n      color: '#FF0000'\n    }\n  }\n}",...CustomColor.parameters?.docs?.source}}},SelectedGeomarket.parameters={...SelectedGeomarket.parameters,docs:{...SelectedGeomarket.parameters?.docs,source:{originalSource:"{\n  args: {\n    data: defaultData,\n    geoJSONPath: 'maps/geomarkets.json',\n    processDataFn: defaultProcessDataFn,\n    selectedGeomarket: ['MS-01']\n  }\n}",...SelectedGeomarket.parameters?.docs?.source}}},MultipleSelectedGeomarkets.parameters={...MultipleSelectedGeomarkets.parameters,docs:{...MultipleSelectedGeomarkets.parameters?.docs,source:{originalSource:"{\n  args: {\n    data: defaultData,\n    geoJSONPath: 'maps/geomarkets.json',\n    processDataFn: defaultProcessDataFn,\n    selectedGeomarket: ['MS-01', 'MS-02']\n  }\n}",...MultipleSelectedGeomarkets.parameters?.docs?.source}}}}}]);
"use strict";(self.webpackChunk_actinc_dls=self.webpackChunk_actinc_dls||[]).push([[339],{"./node_modules/@mdx-js/react/lib/index.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{R:()=>useMDXComponents,x:()=>MDXProvider});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),react__WEBPACK_IMPORTED_MODULE_0___default=__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);const emptyComponents={},MDXContext=react__WEBPACK_IMPORTED_MODULE_0___default().createContext(emptyComponents);function useMDXComponents(components){const contextComponents=react__WEBPACK_IMPORTED_MODULE_0___default().useContext(MDXContext);return react__WEBPACK_IMPORTED_MODULE_0___default().useMemo((function(){return"function"==typeof components?components(contextComponents):{...contextComponents,...components}}),[contextComponents,components])}function MDXProvider(properties){let allComponents;return allComponents=properties.disableParentContext?"function"==typeof properties.components?properties.components(emptyComponents):properties.components||emptyComponents:useMDXComponents(properties.components),react__WEBPACK_IMPORTED_MODULE_0___default().createElement(MDXContext.Provider,{value:allComponents},properties.children)}},"./src/_docs/5.MIGRATION_6_TO_7.mdx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{default:()=>MDXContent});__webpack_require__("./node_modules/react/index.js");var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),lib=__webpack_require__("./node_modules/@mdx-js/react/lib/index.js"),blocks=__webpack_require__("./node_modules/@storybook/addon-docs/dist/blocks.mjs");const MIGRATION_6_TO_7raw_namespaceObject="# Migrating from DLS6 to DLS7\n\n## Breaking Changes\n\n- Converted the DLS build from\n  [CommonJS modules](https://nodejs.org/api/modules.html#modules-commonjs-modules)\n  to\n  [ECMAScript modules](https://nodejs.org/api/esm.html#modules-ecmascript-modules).\n  (See below if you experience bundler issues!)\n- Renamed the `ENCOURA_DATALAB` theme to\n  [`ENCOURA_CLASSIC`](https://github.com/act-org/dls/tree/main/src/styles/themeEncouraClassic)\n- Renamed `sortDirectionTypes` constant to\n  [`SORT_DIRECTION_TYPES`](https://github.com/act-org/dls/blob/main/src/constants/SORT_DIRECTION_TYPES.ts)\n\n## New Features\n\n- Faster load times due to significantly reduced bundle sizes (see below!)\n- Eliminated the need to use\n  [`babel-plugin-transform-imports`](https://www.npmjs.com/package/babel-plugin-transform-imports)\n  in your Babel config to manually reduce the DLS's impact on your bundle size\n  (see below!)\n- Added support for [MUI X v6 packages](https://mui.com/blog/mui-x-v6/)\n- Added a new\n  [`ENCOURAGE`](https://github.com/act-org/dls/tree/main/src/styles/themeEncourage)\n  theme\n- Added `theme.spacingPx` as a convenience number that is accessible on all\n  themes. If your theme uses an 8px layout, `theme.spacingPx = 8`.\n- Added new helper functions:\n  - [`cssRadius`](https://github.com/act-org/dls/blob/main/src/helpers/cssRadius.ts)\n  - [`makeShadow`](https://github.com/act-org/dls/blob/main/src/helpers/makeShadow.ts)\n  - [`px`](https://github.com/act-org/dls/blob/main/src/helpers/px.ts)\n  - [`pxToNumber`](https://github.com/act-org/dls/blob/main/src/helpers/pxToNumber.ts)\n  - [`styled`](https://github.com/act-org/dls/blob/main/src/helpers/styled.ts)\n  - [`types`](https://github.com/act-org/dls/blob/main/src/helpers/types.ts)\n- Added utilities to make it easier to customize your theme beyond the default\n  MUI key/value pairs (check the `README` for more details)\n\n## Refactoring\n\n- Bumped every NPM dependency to its latest release\n- Partial re-write of storybook stories to the simpler\n  [Component Story Format 3](https://storybook.js.org/blog/storybook-csf3-is-here/)\n- The DLS release process is now automated via\n  [Github Actions](https://github.com/act-org/dls/actions).\n- Slightly stricter ESLint rules when contributing to the DLS.\n\n## Performance\n\nOne of the major benefits you will receive by upgrading your app from DLS6\nto DLS7 is faster load times due to a significantly reduced (~65%) bundle size.\n\n### Bundle Size Reduction\n\nVersion <= 6 of the DLS were built and exported as\n[CommonJS modules](https://nodejs.org/api/modules.html#modules-commonjs-modules).\nWhile this allowed the simplest integration of the DLS into any\nproject, it also resulted in project bundles being\n[larger than desired](https://web.dev/commonjs-larger-bundles/) due to\nthe inability of bundlers to\n[tree-shake](https://www.smashingmagazine.com/2021/05/tree-shaking-reference-guide/)\nthe DLS.\n\nHere's what a Next.js application bundle looks like on DLS6:\n\n![DLS6 Bundle Size](https://user-images.githubusercontent.com/4974609/225627645-5ae03d9e-2901-4521-bb80-11b452505341.png)\n\n![DLS6 Bundle Analyzer](https://user-images.githubusercontent.com/4974609/225627688-08fbd0e4-7ff5-4e51-bb16-a77a726828e9.png)\n\nNotice how all DLS icons are being brought into the bundle, even though\nthis application is only using a handful of them.\n\nIn version >= 7 of the DLS, we are now building and exporting the library as\n[ECMAScript modules](https://nodejs.org/api/esm.html#modules-ecmascript-modules).\nThis allows your project's bundler to much more easily read and\n[tree-shake](https://www.smashingmagazine.com/2021/05/tree-shaking-reference-guide/)\nthe DLS right out of the box. (No more need for\n[`babel-plugin-transform-imports`](https://www.npmjs.com/package/babel-plugin-transform-imports)!)\n\nFurthermore, the DLS's `package.json` is also setting:\n\n```json\n\"sideEffects\": false,\n```\n\nto instruct builders to enable even deeper tree-shaking. This should make\nbundle sizes significantly smaller with less effort. However, the tradeoff\nis that in certain scenarios, like\n[Lazy Loading](https://nextjs.org/docs/advanced-features/dynamic-import),\nif you are expecting a dependency to be there that is now removed from\ntree-shaking, things will break and you may need to import that dependency\ndirectly in a parent bundle.\n\nHere's what the same Next.js application bundle looks like on DLS7:\n\n![DLS7 Bundle Size](https://user-images.githubusercontent.com/4974609/225627726-148969c3-abc4-4a17-a5b1-9a697e8feb36.png)\n\n![DLS7 Bundle Analyzer](https://user-images.githubusercontent.com/4974609/225627746-8692ca34-3413-42cd-aec9-7ca688cfcbee.png)\n\nIcons begone!\n\n## SyntaxError: Unexpected token 'export'\n\nOne downside of exporting DLS7 as ECMAScript modules is that the `import` and\n`export` keywords are preserved, which may cause your packager/runner to throw:\n\n```sh\nSyntaxError: Unexpected token 'export'\n```\n\nIf you see this error, you'll need to instruct your packager/runner to transpile\nthe DLS on-the-fly.\n\nYou can do this in a [Next.js](https://nextjs.org/) app by adding the DLS to the\n[`transpilePackages`](https://beta.nextjs.org/docs/api-reference/next.config.js#transpilepackages)\noption in your `next.config.js` file.\n\n```js\ntranspilePackages: ['@actinc/dls'],\n```\n\nYou can also do this in the [Jest](https://jestjs.io/) test runner by omitting\nthe DLS from the\n[`transformIgnorePatterns`](https://jestjs.io/docs/tutorial-react-native#transformignorepatterns-customization)\noption in your `jest.config.js` file.\n\n```js\ntransformIgnorePatterns: ['/node_modules/(?!(@actinc/dls)/)'],\n```\n";function _createMdxContent(props){return(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[(0,jsx_runtime.jsx)(blocks.W8,{title:"DLS/DLS7 Migration Guide"}),"\n",(0,jsx_runtime.jsx)(blocks.oz,{children:MIGRATION_6_TO_7raw_namespaceObject})]})}function MDXContent(props={}){const{wrapper:MDXLayout}={...(0,lib.R)(),...props.components};return MDXLayout?(0,jsx_runtime.jsx)(MDXLayout,{...props,children:(0,jsx_runtime.jsx)(_createMdxContent,{...props})}):_createMdxContent()}}}]);
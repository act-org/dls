"use strict";(self.webpackChunk_actinc_dls=self.webpackChunk_actinc_dls||[]).push([[3648],{"./src/components/_muiX/DataGrid/index.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Primary:()=>Primary,Toolbar:()=>Toolbar,__namedExportsOrder:()=>__namedExportsOrder,default:()=>index_stories});var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),GridToolbar=__webpack_require__("./node_modules/@mui/x-data-grid/esm/components/toolbar/GridToolbar.js");const internal_DataGrid=__webpack_require__("./node_modules/@mui/x-data-grid/esm/DataGrid/DataGrid.js").z;try{internal_DataGrid.displayName="DataGrid",internal_DataGrid.__docgenInfo={description:"",displayName:"DataGrid",props:{style:{defaultValue:null,description:"",name:"style",required:!1,type:{name:"CSSProperties"}},className:{defaultValue:null,description:"",name:"className",required:!1,type:{name:"string"}},"aria-label":{defaultValue:null,description:"The `aria-label` of the Data Grid.",name:"aria-label",required:!1,type:{name:"string"}},"aria-labelledby":{defaultValue:null,description:"The `id` of the element containing a label for the Data Grid.",name:"aria-labelledby",required:!1,type:{name:"string"}},onResize:{defaultValue:null,description:"Callback fired when the Data Grid is resized.\n@param containerSize With all properties from [[ElementSize]].\n@param event The event object.\n@param details Additional details for this callback.",name:"onResize",required:!1,type:{name:'GridEventListener<"debouncedResize">'}},classes:{defaultValue:null,description:"Override or extend the styles applied to the component.",name:"classes",required:!1,type:{name:"Partial<GridClasses>"}},nonce:{defaultValue:null,description:"Nonce of the inline styles for [Content Security Policy](https://www.w3.org/TR/2016/REC-CSP2-20161215/#script-src-the-nonce-attribute).",name:"nonce",required:!1,type:{name:"string"}},rows:{defaultValue:{value:"[]"},description:"Set of rows of type [[GridRowsProp]].",name:"rows",required:!1,type:{name:"readonly R[]"}},slotProps:{defaultValue:null,description:"Overridable components props dynamically passed to the component at rendering.",name:"slotProps",required:!1,type:{name:"Partial<{ baseAutocomplete: Partial<AutocompleteProps<string, true, false, true> & BaseAutocompletePropsOverrides>; ... 42 more ...; root: Partial<...>; }>"}},slots:{defaultValue:null,description:"Overridable components.",name:"slots",required:!1,type:{name:"Partial<GridSlotsComponent>"}},sx:{defaultValue:null,description:"The system prop that allows defining system overrides as well as additional CSS styles.",name:"sx",required:!1,type:{name:"SxProps<Theme>"}},label:{defaultValue:null,description:"The label of the Data Grid.\nIf the `showToolbar` prop is `true`, the label will be displayed in the toolbar and applied to the `aria-label` attribute of the grid.\nIf the `showToolbar` prop is `false`, the label will not be visible but will be applied to the `aria-label` attribute of the grid.",name:"label",required:!1,type:{name:"string"}},columns:{defaultValue:null,description:"Set of columns of type [[GridColDef]][].",name:"columns",required:!0,type:{name:"readonly GridColDef<R>[]"}},loading:{defaultValue:{value:"false"},description:"If `true`, a loading overlay is displayed.",name:"loading",required:!1,type:{name:"boolean"}},autoHeight:{defaultValue:{value:"false"},description:"If `true`, the Data Grid height is dynamic and follows the number of rows in the Data Grid.\n@deprecated Use flex parent container instead: https://mui.com/x/react-data-grid/layout/#flex-parent-container\n@example <div style={{ display: 'flex', flexDirection: 'column' }}>\n  <DataGrid />\n</div>",name:"autoHeight",required:!1,type:{name:"boolean"}},autoPageSize:{defaultValue:{value:"false"},description:"If `true`, the pageSize is calculated according to the container size and the max number of rows to avoid rendering a vertical scroll bar.",name:"autoPageSize",required:!1,type:{name:"boolean"}},checkboxSelection:{defaultValue:{value:"false"},description:"If `true`, the Data Grid will display an extra column with checkboxes for selecting rows.",name:"checkboxSelection",required:!1,type:{name:"boolean"}},columnBufferPx:{defaultValue:{value:"150"},description:"Column region in pixels to render before/after the viewport",name:"columnBufferPx",required:!1,type:{name:"number"}},rowBufferPx:{defaultValue:{value:"150"},description:"Row region in pixels to render before/after the viewport",name:"rowBufferPx",required:!1,type:{name:"number"}},rowSelection:{defaultValue:{value:"true"},description:"If `false`, the row selection mode is disabled.",name:"rowSelection",required:!1,type:{name:"boolean"}},resizeThrottleMs:{defaultValue:{value:"60"},description:"The milliseconds throttle delay for resizing the grid.",name:"resizeThrottleMs",required:!1,type:{name:"number"}},disableColumnFilter:{defaultValue:{value:"false"},description:"If `true`, column filters are disabled.",name:"disableColumnFilter",required:!1,type:{name:"boolean"}},disableColumnMenu:{defaultValue:{value:"false"},description:"If `true`, the column menu is disabled.",name:"disableColumnMenu",required:!1,type:{name:"boolean"}},disableColumnSelector:{defaultValue:{value:"false"},description:"If `true`, hiding/showing columns is disabled.",name:"disableColumnSelector",required:!1,type:{name:"boolean"}},disableDensitySelector:{defaultValue:{value:"false"},description:"If `true`, the density selector is disabled.",name:"disableDensitySelector",required:!1,type:{name:"boolean"}},disableEval:{defaultValue:{value:"false"},description:"If `true`, `eval()` is not used for performance optimization.",name:"disableEval",required:!1,type:{name:"boolean"}},disableMultipleRowSelection:{defaultValue:{value:"false (`!props.checkboxSelection` for MIT Data Grid)"},description:"If `true`, multiple selection using the Ctrl/CMD or Shift key is disabled.\nThe MIT DataGrid will ignore this prop, unless `checkboxSelection` is enabled.",name:"disableMultipleRowSelection",required:!1,type:{name:"boolean"}},disableColumnSorting:{defaultValue:{value:"false"},description:"If `true`, the column sorting feature will be disabled.",name:"disableColumnSorting",required:!1,type:{name:"boolean"}},disableRowSelectionOnClick:{defaultValue:{value:"false"},description:"If `true`, the selection on click on a row or cell is disabled.",name:"disableRowSelectionOnClick",required:!1,type:{name:"boolean"}},disableVirtualization:{defaultValue:{value:"false"},description:"If `true`, the virtualization is disabled.",name:"disableVirtualization",required:!1,type:{name:"boolean"}},editMode:{defaultValue:{value:'"cell"'},description:"Controls whether to use the cell or row editing.",name:"editMode",required:!1,type:{name:"enum",value:[{value:'"cell"'},{value:'"row"'}]}},filterMode:{defaultValue:{value:'"client"'},description:"Filtering can be processed on the server or client-side.\nSet it to 'server' if you would like to handle filtering on the server-side.",name:"filterMode",required:!1,type:{name:"enum",value:[{value:'"client"'},{value:'"server"'}]}},filterDebounceMs:{defaultValue:{value:"150"},description:"The milliseconds delay to wait after a keystroke before triggering filtering.",name:"filterDebounceMs",required:!1,type:{name:"number"}},columnHeaderHeight:{defaultValue:{value:"56"},description:"Sets the height in pixel of the column headers in the Data Grid.",name:"columnHeaderHeight",required:!1,type:{name:"number"}},hideFooter:{defaultValue:{value:"false"},description:"If `true`, the footer component is hidden.",name:"hideFooter",required:!1,type:{name:"boolean"}},hideFooterPagination:{defaultValue:{value:"false"},description:"If `true`, the pagination component in the footer is hidden.",name:"hideFooterPagination",required:!1,type:{name:"boolean"}},hideFooterSelectedRowCount:{defaultValue:{value:"false"},description:"If `true`, the selected row count in the footer is hidden.",name:"hideFooterSelectedRowCount",required:!1,type:{name:"boolean"}},ignoreDiacritics:{defaultValue:{value:"false"},description:"If `true`, the diacritics (accents) are ignored when filtering or quick filtering.\nE.g. when filter value is `cafe`, the rows with `caf√©` will be visible.",name:"ignoreDiacritics",required:!1,type:{name:"boolean"}},keepNonExistentRowsSelected:{defaultValue:{value:"false"},description:"If `true`, the selection model will retain selected rows that do not exist.\nUseful when using server side pagination and row selections need to be retained\nwhen changing pages.",name:"keepNonExistentRowsSelected",required:!1,type:{name:"boolean"}},logger:{defaultValue:{value:"console"},description:"Pass a custom logger in the components that implements the [[Logger]] interface.",name:"logger",required:!1,type:{name:"Logger"}},logLevel:{defaultValue:{value:'"error" ("warn" in dev mode)'},description:"Allows to pass the logging level or false to turn off logging.",name:"logLevel",required:!1,type:{name:"false | keyof Logger"}},paginationMode:{defaultValue:{value:'"client"'},description:"Pagination can be processed on the server or client-side.\nSet it to 'client' if you would like to handle the pagination on the client-side.\nSet it to 'server' if you would like to handle the pagination on the server-side.",name:"paginationMode",required:!1,type:{name:"enum",value:[{value:'"client"'},{value:'"server"'}]}},rowHeight:{defaultValue:{value:"52"},description:"Sets the height in pixel of a row in the Data Grid.",name:"rowHeight",required:!1,type:{name:"number"}},pageSizeOptions:{defaultValue:{value:"[25, 50, 100]"},description:"Select the pageSize dynamically using the component UI.",name:"pageSizeOptions",required:!1,type:{name:"readonly (number | { value: number; label: string; })[]"}},rowSpacingType:{defaultValue:{value:'"margin"'},description:"Sets the type of space between rows added by `getRowSpacing`.",name:"rowSpacingType",required:!1,type:{name:"enum",value:[{value:'"margin"'},{value:'"border"'}]}},showCellVerticalBorder:{defaultValue:{value:"false"},description:"If `true`, vertical borders will be displayed between cells.",name:"showCellVerticalBorder",required:!1,type:{name:"boolean"}},showColumnVerticalBorder:{defaultValue:{value:"false"},description:"If `true`, vertical borders will be displayed between column header items.",name:"showColumnVerticalBorder",required:!1,type:{name:"boolean"}},showToolbar:{defaultValue:{value:"false"},description:"If `true`, the toolbar is displayed.",name:"showToolbar",required:!1,type:{name:"boolean"}},sortingOrder:{defaultValue:{value:"['asc', 'desc', null]"},description:"The order of the sorting sequence.",name:"sortingOrder",required:!1,type:{name:"readonly GridSortDirection[]"}},sortingMode:{defaultValue:{value:'"client"'},description:"Sorting can be processed on the server or client-side.\nSet it to 'client' if you would like to handle sorting on the client-side.\nSet it to 'server' if you would like to handle sorting on the server-side.",name:"sortingMode",required:!1,type:{name:"enum",value:[{value:'"client"'},{value:'"server"'}]}},disableColumnResize:{defaultValue:{value:"false"},description:"If `true`, resizing columns is disabled.",name:"disableColumnResize",required:!1,type:{name:"boolean"}},ignoreValueFormatterDuringExport:{defaultValue:{value:"false"},description:"If `true`, the Data Grid will not use `valueFormatter` when exporting to CSV or copying to clipboard.\nIf an object is provided, you can choose to ignore the `valueFormatter` for CSV export or clipboard export.",name:"ignoreValueFormatterDuringExport",required:!1,type:{name:"boolean | { csvExport?: boolean; clipboardExport?: boolean; } | undefined"}},clipboardCopyCellDelimiter:{defaultValue:{value:"'\\t'"},description:"The character used to separate cell values when copying to the clipboard.",name:"clipboardCopyCellDelimiter",required:!1,type:{name:"string"}},autosizeOnMount:{defaultValue:{value:"false"},description:"If `true`, columns are autosized after the datagrid is mounted.",name:"autosizeOnMount",required:!1,type:{name:"boolean"}},disableAutosize:{defaultValue:{value:"false"},description:"If `true`, column autosizing on header separator double-click is disabled.",name:"disableAutosize",required:!1,type:{name:"boolean"}},rowSpanning:{defaultValue:{value:"false"},description:"If `true`, the Data Grid will auto span the cells over the rows having the same value.",name:"rowSpanning",required:!1,type:{name:"boolean"}},virtualizeColumnsWithAutoRowHeight:{defaultValue:{value:"false"},description:"If `true`, the Data Grid enables column virtualization when `getRowHeight` is set to `() => 'auto'`.\nBy default, column virtualization is disabled when dynamic row height is enabled to measure the row height correctly.\nFor datasets with a large number of columns, this can cause performance issues.\nThe downside of enabling this prop is that the row height will be estimated based the cells that are currently rendered, which can cause row height change when scrolling horizontally.",name:"virtualizeColumnsWithAutoRowHeight",required:!1,type:{name:"boolean"}},localeText:{defaultValue:null,description:"Set the locale text of the Data Grid.\nYou can find all the translation keys supported in [the source](https://github.com/mui/mui-x/blob/HEAD/packages/x-data-grid/src/constants/localeTextConstants.ts) in the GitHub repository.",name:"localeText",required:!1,type:{name:"Partial<GridLocaleText>"}},apiRef:{defaultValue:null,description:"The ref object that allows Data Grid manipulation. Can be instantiated with `useGridApiRef()`.",name:"apiRef",required:!1,type:{name:"RefObject<GridApiCommunity | null>"}},dataSource:{defaultValue:null,description:"The data source object.",name:"dataSource",required:!1,type:{name:"GridDataSource"}},dataSourceCache:{defaultValue:null,description:"Data source cache object.",name:"dataSourceCache",required:!1,type:{name:"GridDataSourceCache | null"}},density:{defaultValue:{value:'"standard"'},description:"Set the density of the Data Grid.",name:"density",required:!1,type:{name:"enum",value:[{value:'"compact"'},{value:'"standard"'},{value:'"comfortable"'}]}},rowCount:{defaultValue:null,description:'Set the total number of rows, if it is different from the length of the value `rows` prop.\nIf some rows have children (for instance in the tree data), this number represents the amount of top level rows.\nOnly works with `paginationMode="server"`, ignored when `paginationMode="client"`.',name:"rowCount",required:!1,type:{name:"number"}},estimatedRowCount:{defaultValue:null,description:'Use if the actual rowCount is not known upfront, but an estimation is available.\nIf some rows have children (for instance in the tree data), this number represents the amount of top level rows.\nApplicable only with `paginationMode="server"` and when `rowCount="-1"`',name:"estimatedRowCount",required:!1,type:{name:"number"}},scrollbarSize:{defaultValue:null,description:"Override the height/width of the Data Grid inner scrollbar.",name:"scrollbarSize",required:!1,type:{name:"number"}},getCellClassName:{defaultValue:null,description:"Function that applies CSS classes dynamically on cells.\n@param params With all properties from [[GridCellParams]].\n@returns The CSS class to apply to the cell.",name:"getCellClassName",required:!1,type:{name:"((params: GridCellParams<any, R, R, GridTreeNode>) => string)"}},getRowClassName:{defaultValue:null,description:"Function that applies CSS classes dynamically on rows.\n@param params With all properties from [[GridRowClassNameParams]].\n@returns The CSS class to apply to the row.",name:"getRowClassName",required:!1,type:{name:"((params: GridRowClassNameParams<R>) => string)"}},getRowHeight:{defaultValue:null,description:'Function that sets the row height per row.\n@param params With all properties from [[GridRowHeightParams]].\n@returns The row height value. If `null` or `undefined` then the default row height is applied. If "auto" then the row height is calculated based on the content.',name:"getRowHeight",required:!1,type:{name:"((params: GridRowHeightParams) => GridRowHeightReturnValue)"}},getEstimatedRowHeight:{defaultValue:null,description:"Function that returns the estimated height for a row.\nOnly works if dynamic row height is used.\nOnce the row height is measured this value is discarded.\n@param params With all properties from [[GridRowHeightParams]].\n@returns The estimated row height value. If `null` or `undefined` then the default row height, based on the density, is applied.",name:"getEstimatedRowHeight",required:!1,type:{name:"((params: GridRowHeightParams) => number | null)"}},getRowSpacing:{defaultValue:null,description:"Function that allows to specify the spacing between rows.\n@param params With all properties from [[GridRowSpacingParams]].\n@returns The row spacing values.",name:"getRowSpacing",required:!1,type:{name:"((params: GridRowSpacingParams) => GridRowSpacing)"}},getDetailPanelContent:{defaultValue:null,description:"Function that returns the element to render in row detail.\n@param params With all properties from [[GridRowParams]].\n@returns The row detail element.",name:"getDetailPanelContent",required:!1,type:{name:"((params: GridRowParams<R>) => ReactNode)"}},isCellEditable:{defaultValue:null,description:"Callback fired when a cell is rendered, returns true if the cell is editable.\n@param params With all properties from [[GridCellParams]].\n@returns A boolean indicating if the cell is editable.",name:"isCellEditable",required:!1,type:{name:"((params: GridCellParams<any, R, R, GridTreeNode>) => boolean)"}},isRowSelectable:{defaultValue:null,description:"Determines if a row can be selected.\n@param params With all properties from [[GridRowParams]].\n@returns A boolean indicating if the row is selectable.",name:"isRowSelectable",required:!1,type:{name:"((params: GridRowParams<R>) => boolean)"}},onCellEditStart:{defaultValue:null,description:"Callback fired when the cell turns to edit mode.\n@param params With all properties from [[GridCellParams]].\n@param event The event that caused this prop to be called.",name:"onCellEditStart",required:!1,type:{name:'GridEventListener<"cellEditStart">'}},onCellEditStop:{defaultValue:null,description:"Callback fired when the cell turns to view mode.\n@param params With all properties from [[GridCellParams]].\n@param event The event that caused this prop to be called.",name:"onCellEditStop",required:!1,type:{name:'GridEventListener<"cellEditStop">'}},onDataSourceError:{defaultValue:null,description:"Callback fired when a data source request fails.\n@param error The data source error object.",name:"onDataSourceError",required:!1,type:{name:"((error: GridUpdateRowError | GridGetRowsError<GridGetRowsParams>) => void)"}},onRowEditStart:{defaultValue:null,description:"Callback fired when the row turns to edit mode.\n@param params With all properties from [[GridRowParams]].\n@param event The event that caused this prop to be called.",name:"onRowEditStart",required:!1,type:{name:'GridEventListener<"rowEditStart">'}},onRowEditStop:{defaultValue:null,description:"Callback fired when the row turns to view mode.\n@param params With all properties from [[GridRowParams]].\n@param event The event that caused this prop to be called.",name:"onRowEditStop",required:!1,type:{name:'GridEventListener<"rowEditStop">'}},onCellClick:{defaultValue:null,description:"Callback fired when any cell is clicked.\n@param params With all properties from [[GridCellParams]].\n@param event The event object.\n@param details Additional details for this callback.",name:"onCellClick",required:!1,type:{name:'GridEventListener<"cellClick">'}},onCellDoubleClick:{defaultValue:null,description:"Callback fired when a double click event comes from a cell element.\n@param params With all properties from [[GridCellParams]].\n@param event The event object.\n@param details Additional details for this callback.",name:"onCellDoubleClick",required:!1,type:{name:'GridEventListener<"cellDoubleClick">'}},onCellKeyDown:{defaultValue:null,description:"Callback fired when a keydown event comes from a cell element.\n@param params With all properties from [[GridCellParams]].\n@param event The event object.\n@param details Additional details for this callback.",name:"onCellKeyDown",required:!1,type:{name:'GridEventListener<"cellKeyDown">'}},onColumnHeaderClick:{defaultValue:null,description:"Callback fired when a click event comes from a column header element.\n@param params With all properties from [[GridColumnHeaderParams]].\n@param event The event object.\n@param details Additional details for this callback.",name:"onColumnHeaderClick",required:!1,type:{name:'GridEventListener<"columnHeaderClick">'}},onColumnHeaderContextMenu:{defaultValue:null,description:"Callback fired when a contextmenu event comes from a column header element.\n@param params With all properties from [[GridColumnHeaderParams]].\n@param event The event object.",name:"onColumnHeaderContextMenu",required:!1,type:{name:'GridEventListener<"columnHeaderContextMenu">'}},onColumnHeaderDoubleClick:{defaultValue:null,description:"Callback fired when a double click event comes from a column header element.\n@param params With all properties from [[GridColumnHeaderParams]].\n@param event The event object.\n@param details Additional details for this callback.",name:"onColumnHeaderDoubleClick",required:!1,type:{name:'GridEventListener<"columnHeaderDoubleClick">'}},onColumnHeaderOver:{defaultValue:null,description:"Callback fired when a mouseover event comes from a column header element.\n@param params With all properties from [[GridColumnHeaderParams]].\n@param event The event object.\n@param details Additional details for this callback.",name:"onColumnHeaderOver",required:!1,type:{name:'GridEventListener<"columnHeaderOver">'}},onColumnHeaderOut:{defaultValue:null,description:"Callback fired when a mouseout event comes from a column header element.\n@param params With all properties from [[GridColumnHeaderParams]].\n@param event The event object.\n@param details Additional details for this callback.",name:"onColumnHeaderOut",required:!1,type:{name:'GridEventListener<"columnHeaderOut">'}},onColumnHeaderEnter:{defaultValue:null,description:"Callback fired when a mouse enter event comes from a column header element.\n@param params With all properties from [[GridColumnHeaderParams]].\n@param event The event object.\n@param details Additional details for this callback.",name:"onColumnHeaderEnter",required:!1,type:{name:'GridEventListener<"columnHeaderEnter">'}},onColumnHeaderLeave:{defaultValue:null,description:"Callback fired when a mouse leave event comes from a column header element.\n@param params With all properties from [[GridColumnHeaderParams]].\n@param event The event object.\n@param details Additional details for this callback.",name:"onColumnHeaderLeave",required:!1,type:{name:'GridEventListener<"columnHeaderLeave">'}},onColumnOrderChange:{defaultValue:null,description:"Callback fired when a column is reordered.\n@param params With all properties from [[GridColumnOrderChangeParams]].\n@param event The event object.\n@param details Additional details for this callback.",name:"onColumnOrderChange",required:!1,type:{name:'GridEventListener<"columnOrderChange">'}},onDensityChange:{defaultValue:null,description:"Callback fired when the density changes.\n@param density New density value.",name:"onDensityChange",required:!1,type:{name:"((density: GridDensity) => void)"}},onRowClick:{defaultValue:null,description:"Callback fired when a row is clicked.\nNot called if the target clicked is an interactive element added by the built-in columns.\n@param params With all properties from [[GridRowParams]].\n@param event The event object.\n@param details Additional details for this callback.",name:"onRowClick",required:!1,type:{name:'GridEventListener<"rowClick">'}},onRowDoubleClick:{defaultValue:null,description:"Callback fired when a double click event comes from a row container element.\n@param params With all properties from [[RowParams]].\n@param event The event object.\n@param details Additional details for this callback.",name:"onRowDoubleClick",required:!1,type:{name:'GridEventListener<"rowDoubleClick">'}},onStateChange:{defaultValue:null,description:"Callback fired when the state of the Data Grid is updated.\n@param state The new state.\n@param event The event object.\n@param details Additional details for this callback.\n@ignore - do not document.",name:"onStateChange",required:!1,type:{name:'GridEventListener<"stateChange">'}},paginationModel:{defaultValue:null,description:"The pagination model of type [[GridPaginationModel]] which refers to current `page` and `pageSize`.",name:"paginationModel",required:!1,type:{name:"GridPaginationModel"}},paginationMeta:{defaultValue:null,description:'The extra information about the pagination state of the Data Grid.\nOnly applicable with `paginationMode="server"`.',name:"paginationMeta",required:!1,type:{name:"GridPaginationMeta"}},onPaginationModelChange:{defaultValue:null,description:"Callback fired when the pagination model has changed.\n@param model Updated pagination model.\n@param details Additional details for this callback.",name:"onPaginationModelChange",required:!1,type:{name:'((model: GridPaginationModel, details: GridCallbackDetails<"pagination">) => void)'}},onRowCountChange:{defaultValue:null,description:"Callback fired when the row count has changed.\n@param count Updated row count.",name:"onRowCountChange",required:!1,type:{name:"((count: number) => void)"}},onPaginationMetaChange:{defaultValue:null,description:"Callback fired when the pagination meta has changed.\n@param paginationMeta Updated pagination meta.",name:"onPaginationMetaChange",required:!1,type:{name:"((paginationMeta: GridPaginationMeta) => void)"}},onPreferencePanelClose:{defaultValue:null,description:"Callback fired when the preferences panel is closed.\n@param params With all properties from [[GridPreferencePanelParams]].\n@param event The event object.\n@param details Additional details for this callback.",name:"onPreferencePanelClose",required:!1,type:{name:'GridEventListener<"preferencePanelClose">'}},onPreferencePanelOpen:{defaultValue:null,description:"Callback fired when the preferences panel is opened.\n@param params With all properties from [[GridPreferencePanelParams]].\n@param event The event object.\n@param details Additional details for this callback.",name:"onPreferencePanelOpen",required:!1,type:{name:'GridEventListener<"preferencePanelOpen">'}},onMenuOpen:{defaultValue:null,description:"Callback fired when the menu is opened.\n@param params With all properties from [[GridMenuParams]].\n@param event The event object.\n@param details Additional details for this callback.",name:"onMenuOpen",required:!1,type:{name:'GridEventListener<"menuOpen">'}},onMenuClose:{defaultValue:null,description:"Callback fired when the menu is closed.\n@param params With all properties from [[GridMenuParams]].\n@param event The event object.\n@param details Additional details for this callback.",name:"onMenuClose",required:!1,type:{name:'GridEventListener<"menuClose">'}},cellModesModel:{defaultValue:null,description:"Controls the modes of the cells.",name:"cellModesModel",required:!1,type:{name:"GridCellModesModel"}},onCellModesModelChange:{defaultValue:null,description:'Callback fired when the `cellModesModel` prop changes.\n@param cellModesModel Object containing which cells are in "edit" mode.\n@param details Additional details for this callback.',name:"onCellModesModelChange",required:!1,type:{name:"((cellModesModel: GridCellModesModel, details: GridCallbackDetails<any>) => void)"}},rowModesModel:{defaultValue:null,description:"Controls the modes of the rows.",name:"rowModesModel",required:!1,type:{name:"GridRowModesModel"}},onRowModesModelChange:{defaultValue:null,description:'Callback fired when the `rowModesModel` prop changes.\n@param rowModesModel Object containing which rows are in "edit" mode.\n@param details Additional details for this callback.',name:"onRowModesModelChange",required:!1,type:{name:"((rowModesModel: GridRowModesModel, details: GridCallbackDetails<any>) => void)"}},filterModel:{defaultValue:null,description:"Set the filter model of the Data Grid.",name:"filterModel",required:!1,type:{name:"GridFilterModel"}},onFilterModelChange:{defaultValue:null,description:"Callback fired when the Filter model changes before the filters are applied.\n@param model With all properties from [[GridFilterModel]].\n@param details Additional details for this callback.",name:"onFilterModelChange",required:!1,type:{name:'((model: GridFilterModel, details: GridCallbackDetails<"filter">) => void)'}},rowSelectionModel:{defaultValue:null,description:"Sets the row selection model of the Data Grid.",name:"rowSelectionModel",required:!1,type:{name:"GridRowSelectionModel"}},onRowSelectionModelChange:{defaultValue:null,description:"Callback fired when the selection state of one or multiple rows changes.\n@param rowSelectionModel With all the row ids [[GridSelectionModel]].\n@param details Additional details for this callback.",name:"onRowSelectionModelChange",required:!1,type:{name:"((rowSelectionModel: GridRowSelectionModel, details: GridCallbackDetails<any>) => void)"}},columnVisibilityModel:{defaultValue:null,description:"Set the column visibility model of the Data Grid.\nIf defined, the Data Grid will ignore the `hide` property in [[GridColDef]].",name:"columnVisibilityModel",required:!1,type:{name:"GridColumnVisibilityModel"}},onColumnVisibilityModelChange:{defaultValue:null,description:"Callback fired when the column visibility model changes.\n@param model The new model.\n@param details Additional details for this callback.",name:"onColumnVisibilityModelChange",required:!1,type:{name:"((model: GridColumnVisibilityModel, details: GridCallbackDetails<any>) => void)"}},sortModel:{defaultValue:null,description:"Set the sort model of the Data Grid.",name:"sortModel",required:!1,type:{name:"GridSortModel"}},onSortModelChange:{defaultValue:null,description:"Callback fired when the sort model changes before a column is sorted.\n@param model With all properties from [[GridSortModel]].\n@param details Additional details for this callback.",name:"onSortModelChange",required:!1,type:{name:"((model: GridSortModel, details: GridCallbackDetails<any>) => void)"}},getRowId:{defaultValue:null,description:"Return the id of a given [[GridRowModel]].\nEnsure the reference of this prop is stable to avoid performance implications.\nIt could be done by either defining the prop outside of the component or by memoizing it.",name:"getRowId",required:!1,type:{name:"GridRowIdGetter<R>"}},initialState:{defaultValue:null,description:"The initial state of the DataGrid.\nThe data in it will be set in the state on initialization but will not be controlled.\nIf one of the data in `initialState` is also being controlled, then the control state wins.",name:"initialState",required:!1,type:{name:"GridInitialStateCommunity"}},experimentalFeatures:{defaultValue:null,description:"Unstable features, breaking changes might be introduced.\nFor each feature, if the flag is not explicitly set to `true`, the feature will be fully disabled and any property / method call will not have any effect.",name:"experimentalFeatures",required:!1,type:{name:"Partial<GridExperimentalFeatures>"}},processRowUpdate:{defaultValue:null,description:"Callback called before updating a row with new values in the row and cell editing.\n@template R\n@param newRow Row object with the new values.\n@param oldRow Row object with the old values.\n@param params Additional parameters.\n@returns The final values to update the row.",name:"processRowUpdate",required:!1,type:{name:"((newRow: R, oldRow: R, params: { rowId: GridRowId; }) => R | Promise<R>)"}},onProcessRowUpdateError:{defaultValue:null,description:"Callback called when `processRowUpdate` throws an error or rejects.\n@param error The error thrown.",name:"onProcessRowUpdateError",required:!1,type:{name:"((error: any) => void)"}},columnGroupingModel:{defaultValue:null,description:"",name:"columnGroupingModel",required:!1,type:{name:"GridColumnGroupingModel"}},columnGroupHeaderHeight:{defaultValue:null,description:"Sets the height in pixels of the column group headers in the Data Grid.\nInherits the `columnHeaderHeight` value if not set.",name:"columnGroupHeaderHeight",required:!1,type:{name:"number"}},onClipboardCopy:{defaultValue:null,description:"Callback called when the data is copied to the clipboard.\n@param data The data copied to the clipboard.",name:"onClipboardCopy",required:!1,type:{name:'GridEventListener<"clipboardCopy">'}},autosizeOptions:{defaultValue:null,description:"The options for autosize when user-initiated.",name:"autosizeOptions",required:!1,type:{name:"GridAutosizeOptions"}},onColumnResize:{defaultValue:null,description:"Callback fired while a column is being resized.\n@param params With all properties from [[GridColumnResizeParams]].\n@param event The event object.\n@param details Additional details for this callback.",name:"onColumnResize",required:!1,type:{name:'GridEventListener<"columnResize">'}},onColumnWidthChange:{defaultValue:null,description:"Callback fired when the width of a column is changed.\n@param params With all properties from [[GridColumnResizeParams]].\n@param event The event object.\n@param details Additional details for this callback.",name:"onColumnWidthChange",required:!1,type:{name:'GridEventListener<"columnWidthChange">'}},pagination:{defaultValue:null,description:"",name:"pagination",required:!1,type:{name:"true"}},ref:{defaultValue:null,description:"Allows getting a ref to the component instance.\nOnce the component unmounts, React will set `ref.current` to `null`\n(or call the ref with `null` if you passed a callback ref).\n@see {@link https://react.dev/learn/referencing-values-with-refs#refs-and-the-dom React Docs}",name:"ref",required:!1,type:{name:"Ref<HTMLDivElement>"}},key:{defaultValue:null,description:"",name:"key",required:!1,type:{name:"Key | null"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/_muiX/DataGrid/internal.tsx#DataGrid"]={docgenInfo:internal_DataGrid.__docgenInfo,name:"DataGrid",path:"src/components/_muiX/DataGrid/internal.tsx#DataGrid"})}catch(__react_docgen_typescript_loader_error){}const index_stories={args:{autoHeight:!0,columns:[{align:"left",description:"The user's ID.",editable:!0,field:"id",filterable:!0,headerAlign:"left",headerName:"User ID",sortable:!0,type:"string",width:175},{align:"left",description:"The user's first name.",editable:!0,field:"firstName",filterable:!0,flex:1,headerAlign:"left",headerName:"First name",sortable:!0,type:"string"},{align:"left",description:"The user's last name.",editable:!0,field:"lastName",filterable:!0,flex:1,headerAlign:"left",headerName:"Last name",sortable:!0,type:"string"},{align:"left",description:"The user's full name.",editable:!0,field:"fullName",filterable:!0,flex:1,headerAlign:"left",headerName:"Full name",sortable:!0,type:"string",valueGetter:(_,row)=>`${row.firstName||""} ${row.lastName||""}`},{align:"right",description:"The user's age.",editable:!0,field:"age",filterable:!0,headerAlign:"right",headerName:"Age",sortable:!0,type:"number",width:175}],filterMode:"client",paginationMode:"client",rows:[{age:35,firstName:"Jon",id:1,lastName:"Snow"},{age:42,firstName:"Cersei",id:2,lastName:"Lannister"},{age:45,firstName:"Jaime",id:3,lastName:"Lannister"},{age:16,firstName:"Arya",id:4,lastName:"Stark"},{age:null,firstName:"Daenerys",id:5,lastName:"Targaryen"},{age:150,firstName:null,id:6,lastName:"Melisandre"},{age:44,firstName:"Ferrara",id:7,lastName:"Clifford"},{age:36,firstName:"Rossini",id:8,lastName:"Frances"},{age:65,firstName:"Harvey",id:9,lastName:"Roxie"}],sortingMode:"client"},argTypes:{onCellClick:{action:"onCellClick"},onCellDoubleClick:{action:"onCellDoubleClick"},onColumnHeaderClick:{action:"onColumnHeaderClick"},onColumnHeaderDoubleClick:{action:"onColumnHeaderDoubleClick"},onColumnOrderChange:{action:"onColumnOrderChange"},onColumnVisibilityChange:{action:"onColumnVisibilityChange"},onFilterModelChange:{action:"onFilterModelChange"},onPageSizeChange:{action:"onPageSizeChange"},onResize:{action:"onResize"},onRowClick:{action:"onRowClick"},onRowDoubleClick:{action:"onRowDoubleClick"},onSelectionModelChange:{action:"onSelectionModelChange"},onSortModelChange:{action:"onSortModelChange"}},component:internal_DataGrid,parameters:{layout:"padded"},render:args=>(0,jsx_runtime.jsx)("div",{style:{display:"flex",height:"auto",width:"100%"},children:(0,jsx_runtime.jsx)("div",{style:{flexGrow:1},children:(0,jsx_runtime.jsx)(internal_DataGrid,{...args})})}),tags:["autodocs"],title:"MUI X / DataGrid"},Primary={},Toolbar={args:{slots:{toolbar:GridToolbar.O}}},__namedExportsOrder=["Primary","Toolbar"];Primary.parameters={...Primary.parameters,docs:{...Primary.parameters?.docs,source:{originalSource:"{}",...Primary.parameters?.docs?.source}}},Toolbar.parameters={...Toolbar.parameters,docs:{...Toolbar.parameters?.docs,source:{originalSource:"{\n  args: {\n    slots: {\n      toolbar: GridToolbar\n    }\n  }\n}",...Toolbar.parameters?.docs?.source}}}}}]);
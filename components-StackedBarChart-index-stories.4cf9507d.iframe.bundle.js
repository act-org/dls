"use strict";(self.webpackChunk_actinc_dls=self.webpackChunk_actinc_dls||[]).push([[8345],{"./src/components/StackedBarChart/index.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{CustomColors:()=>CustomColors,CustomSublabels:()=>CustomSublabels,Default:()=>Default,HidingBarLabelValue:()=>HidingBarLabelValue,LongLabel:()=>LongLabel,LongSublabel:()=>LongSublabel,UngroupedStackedBarChart:()=>UngroupedStackedBarChart,VerticalBarChart:()=>VerticalBarChart,__namedExportsOrder:()=>__namedExportsOrder,default:()=>index_stories});var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),DLS_COMPONENT_NAMES=__webpack_require__("./src/constants/DLS_COMPONENT_NAMES.ts"),playground=__webpack_require__("./src/helpers/playground.ts"),themeAct=__webpack_require__("./src/styles/themeAct/index.ts"),themeActEt=__webpack_require__("./src/styles/themeActEt/index.ts"),themeEncouraClassic=__webpack_require__("./src/styles/themeEncouraClassic/index.ts"),themeEncourage=__webpack_require__("./src/styles/themeEncourage/index.ts");const defaultData=[{2019:600,"2019a":250,"2019b":250,2020:250,"2020a":300,"2020b":600,2021:600,"2021a":300,"2021b":250,name:"California"},{2019:575,"2019a":250,"2019b":250,2020:565,"2020a":300,"2020b":250,2021:580,"2021a":300,"2021b":250,name:"Nevada"},{2019:448,"2019a":250,"2019b":250,2020:438,"2020a":300,"2020b":250,2021:450,"2021a":300,"2021b":250,name:"New York"},{2019:130,"2019a":250,"2019b":250,2020:150,"2020a":300,"2020b":250,2021:140,"2021a":300,"2021b":250,name:"Texas"},{2019:120,"2019a":250,"2019b":250,2020:155,"2020a":300,"2020b":250,2021:150,"2021a":300,"2021b":250,name:"Washington"},{2019:800,"2019a":250,"2019b":250,2020:980,"2020a":300,"2020b":250,2021:125,"2021a":300,"2021b":250,name:"Oregon"}],defaultBarKeys=[["2019","2019a","2019b"],["2020","2020a","2020b"],["2021","2021a","2021b"]];var useThemeProps=__webpack_require__("./node_modules/@mui/material/esm/styles/useThemeProps.js"),useTheme=__webpack_require__("./node_modules/@mui/material/esm/styles/useTheme.js"),numeral=__webpack_require__("./node_modules/numeral/numeral.js"),numeral_default=__webpack_require__.n(numeral),react=__webpack_require__("./node_modules/react/index.js"),react_default=__webpack_require__.n(react),Bar=__webpack_require__("./node_modules/recharts/es6/cartesian/Bar.js"),LabelList=__webpack_require__("./node_modules/recharts/es6/component/LabelList.js"),BarChart=__webpack_require__("./src/components/BarChart/index.tsx"),DEFAULT_CHART_COLORS=__webpack_require__("./src/constants/DEFAULT_CHART_COLORS.ts"),Typography=__webpack_require__("./node_modules/@mui/material/esm/Typography/Typography.js"),styled=__webpack_require__("./node_modules/@mui/material/esm/styles/styled.js"),DLS_COMPONENT_SLOT_NAMES=__webpack_require__("./src/constants/DLS_COMPONENT_SLOT_NAMES.ts");const StyledTooltipText=(0,styled.Ay)(Typography.A,{name:DLS_COMPONENT_NAMES.A.STACKED_BAR_CHART,slot:DLS_COMPONENT_SLOT_NAMES.h[DLS_COMPONENT_NAMES.A.STACKED_BAR_CHART].TOOLTIP_TEXT})((({theme})=>({fontSize:theme.typography.body1.fontSize}))),StackedBarChart=inProps=>{const{barChartProps,barKeys=[],barProps,children,colors=[],customizeBarText,data,labelListProps,setTooltipBarId,subLabelProps,subLabels,tooltipBarId}=(0,useThemeProps.A)({name:DLS_COMPONENT_NAMES.A.STACKED_BAR_CHART,props:inProps}),{palette,typography}=(0,useTheme.A)(),[barIdHovered,setBarIdHovered]=react_default().useState(tooltipBarId),subLabelKeys=subLabels||barKeys.reduce(((acc,keys)=>[...acc,keys[0]]),[]),[animate,setAnimate]=react_default().useState(!0),onAnimationStart=react_default().useCallback((()=>{setTimeout((()=>{setAnimate(!1)}),1500)}),[]),maxSubLabelWidth=(0,react.useMemo)((()=>subLabelKeys.reduce(((acc,key)=>{const textWidth=(0,BarChart.kD)(`${subLabelProps?.style?.fontSize||typography.body1.fontSize}px ${typography.fontFamily}`,key.toLocaleString());return textWidth>acc?textWidth:acc}),0)),[subLabelKeys,subLabelProps?.style?.fontSize,typography.fontFamily]);return(0,jsx_runtime.jsx)(BarChart.Es,{chartProps:{barGap:4},data,height:26*(barKeys.length-1)+2*(barKeys.length-1)+108+(data.length-1)*(38+26*(barKeys.length-1)),subLabelWidth:maxSubLabelWidth,tooltipBarId:tooltipBarId||barIdHovered,...barChartProps,tooltipProps:{renderAdditionalInfo:(barId,payload)=>{const keys=barKeys.find((bKeys=>bKeys.some((key=>key===barId)))),info=payload.find((el=>el.dataKey===barId));return info&&keys?keys.map((key=>(0,jsx_runtime.jsxs)(StyledTooltipText,{children:[key," Value: ",numeral_default()(info.payload[key]).format("0,0")]},key))):null},...barChartProps?.tooltipProps},children:(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[barKeys.map(((keys,index)=>keys.map(((key,i)=>(0,jsx_runtime.jsxs)(Bar.y,{dataKey:key,fill:barChartProps?.customizeBarFillColor?.(i,key)||colors[i]||DEFAULT_CHART_COLORS.A[i]||palette.grey[700],isAnimationActive:animate,onAnimationStart,onMouseLeave:()=>{setTooltipBarId&&setTooltipBarId(void 0),setBarIdHovered(void 0)},onMouseOver:()=>{barIdHovered!==keys[0]&&(setTooltipBarId&&setTooltipBarId(keys[0]),setBarIdHovered(keys[0]))},stackId:index,...barProps,children:[(0,jsx_runtime.jsx)(LabelList.Z,{formatter:v=>numeral_default()(v).format("0,0"),onMouseLeave:()=>{setTooltipBarId&&setTooltipBarId(void 0),setBarIdHovered(void 0)},onMouseOver:()=>{barIdHovered!==keys[0]&&(setTooltipBarId&&setTooltipBarId(keys[0]),setBarIdHovered(keys[0]))},position:"insideRight",style:customizeBarText?customizeBarText(i):{},valueAccessor:bar=>bar.width>25?bar?.tooltipPayload[0]?.value:void 0,...labelListProps}),barKeys.length>1&&0===i?(0,jsx_runtime.jsx)(LabelList.Z,{position:"left",valueAccessor:bar=>subLabels?subLabels[index]:bar?.tooltipPayload[0]?.name,...subLabelProps}):void 0]},`${key}-bar`))))),children]})})};try{StackedBarChart.displayName="StackedBarChart",StackedBarChart.__docgenInfo={description:"",displayName:"StackedBarChart",props:{barChartProps:{defaultValue:null,description:"",name:"barChartProps",required:!1,type:{name:'Omit<BarChartProps, "data">'}},barKeys:{defaultValue:null,description:"",name:"barKeys",required:!1,type:{name:"string[][]"}},barProps:{defaultValue:null,description:"",name:"barProps",required:!1,type:{name:"Props"}},children:{defaultValue:null,description:"",name:"children",required:!1,type:{name:"ReactElement<unknown, string | JSXElementConstructor<any>>"}},colors:{defaultValue:null,description:"",name:"colors",required:!1,type:{name:"string[]"}},customizeBarText:{defaultValue:null,description:"",name:"customizeBarText",required:!1,type:{name:"((index: number) => CSSProperties)"}},data:{defaultValue:null,description:"",name:"data",required:!0,type:{name:"DataProps[]"}},labelListProps:{defaultValue:null,description:"",name:"labelListProps",required:!1,type:{name:"Props<ILabelListData>"}},setTooltipBarId:{defaultValue:null,description:"",name:"setTooltipBarId",required:!1,type:{name:"((value: string) => void)"}},subLabelProps:{defaultValue:null,description:"",name:"subLabelProps",required:!1,type:{name:"Props<ILabelListData>"}},subLabels:{defaultValue:null,description:"",name:"subLabels",required:!1,type:{name:"string[]"}},tooltipBarId:{defaultValue:null,description:"",name:"tooltipBarId",required:!1,type:{name:"string"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/StackedBarChart/index.tsx#StackedBarChart"]={docgenInfo:StackedBarChart.__docgenInfo,name:"StackedBarChart",path:"src/components/StackedBarChart/index.tsx#StackedBarChart"})}catch(__react_docgen_typescript_loader_error){}const index_stories={args:{barKeys:defaultBarKeys,data:defaultData},argTypes:(0,playground.Q)({barChartProps:{},barKeys:{},barProps:{},children:{},colors:{},data:{},labelListProps:{},subLabelProps:{}},StackedBarChart),component:StackedBarChart,tags:["autodocs"],title:"Molecules / Charts / StackedBarChart"},Default={},CustomColors={args:{colors:["#FF0000","#00FF00","#0000FF"]}},CustomSublabels={args:{barKeys:defaultBarKeys,data:defaultData,subLabels:["2019 test","2020 test","2021 test"]}},HidingBarLabelValue={args:{barChartProps:{subLabelWidth:130},barKeys:defaultBarKeys,data:[{2019:15500,"2019a":250,"2019b":250,2020:250,"2020a":300,"2020b":600,2021:600,"2021a":300,"2021b":0,name:"Community College of Allegheny County Boyce Campus"}]}},UngroupedStackedBarChart={args:{barKeys:[["2019","2019a","2019b"]],data:defaultData}},VerticalBarChart=(args,context)=>{const{globals}=context,mergedSubLabelProps=((subLabelProps,globals)=>{const{theme}=globals;let newSubLabelProps;switch(theme){case"ACT":newSubLabelProps=themeAct.A?.components?.[DLS_COMPONENT_NAMES.A.STACKED_BAR_CHART]?.defaultProps?.subLabelProps;break;case"ACT_ET":newSubLabelProps=themeActEt.A?.components?.[DLS_COMPONENT_NAMES.A.STACKED_BAR_CHART]?.defaultProps?.subLabelProps;break;case"ENCOURAGE":newSubLabelProps=themeEncourage.Ay?.components?.[DLS_COMPONENT_NAMES.A.STACKED_BAR_CHART]?.defaultProps?.subLabelProps;break;default:newSubLabelProps=themeEncouraClassic.A?.components?.[DLS_COMPONENT_NAMES.A.STACKED_BAR_CHART]?.defaultProps?.subLabelProps}return{...subLabelProps,...newSubLabelProps}})({position:"bottom"},globals);return(0,jsx_runtime.jsx)(StackedBarChart,{...args,barChartProps:{chartProps:{layout:"horizontal",margin:{left:0}},maxHeight:"auto",xAxisProps:{axisLine:!0,dataKey:"name",dy:10,orientation:"bottom",style:{fill:"#003359",fontSize:"14px",fontWeight:500},tickLine:!1,type:"category"},yAxisProps:{dataKey:void 0,dx:0,padding:{bottom:0,top:0},style:{fill:"#555",fontSize:"10px"},type:"number"}},barKeys:defaultBarKeys,data:defaultData,labelListProps:{position:"insideTop"},subLabelProps:mergedSubLabelProps})},LongLabel={args:{barKeys:defaultBarKeys,data:[{2019:900,"2019a":250,"2019b":250,2020:823,"2020a":300,"2020b":250,2021:925,"2021a":300,"2021b":250,name:" Los Angeles - California, United States"},{2019:575,"2019a":250,"2019b":250,2020:565,"2020a":300,"2020b":250,2021:580,"2021a":300,"2021b":250,name:"Carson City - Nevada, United States"},{2019:448,"2019a":250,"2019b":250,2020:438,"2020a":300,"2020b":300,2021:450,"2021a":350,"2021b":250,name:"New York - New York, United States"}]}},LongSublabel={args:{barKeys:[["2019 with long sublabel","2019a","2019b"],["2020 with long sublabel","2020a","2020b"],["2021 with long sublabel","2021a","2021b"]],data:[{"2019 with long sublabel":900,"2019a":250,"2019b":250,"2020 with long sublabel":823,"2020a":300,"2020b":300,"2021 with long sublabel":925,"2021a":350,"2021b":250,name:" California"},{"2019 with long sublabel":575,"2019a":250,"2019b":250,"2020 with long sublabel":565,"2020a":300,"2020b":300,"2021 with long sublabel":580,"2021a":350,"2021b":250,name:" Nevada"},{"2019 with long sublabel":448,"2019a":250,"2019b":250,"2020 with long sublabel":438,"2020a":300,"2020b":300,"2021 with long sublabel":450,"2021a":350,"2021b":250,name:"New York"}]}},__namedExportsOrder=["Default","CustomColors","CustomSublabels","HidingBarLabelValue","UngroupedStackedBarChart","VerticalBarChart","LongLabel","LongSublabel"];Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:"{}",...Default.parameters?.docs?.source}}},CustomColors.parameters={...CustomColors.parameters,docs:{...CustomColors.parameters?.docs,source:{originalSource:"{\n  args: {\n    colors: ['#FF0000', '#00FF00', '#0000FF']\n  }\n}",...CustomColors.parameters?.docs?.source}}},CustomSublabels.parameters={...CustomSublabels.parameters,docs:{...CustomSublabels.parameters?.docs,source:{originalSource:"{\n  args: {\n    barKeys: defaultBarKeys,\n    data: defaultData,\n    subLabels: ['2019 test', '2020 test', '2021 test']\n  }\n}",...CustomSublabels.parameters?.docs?.source}}},HidingBarLabelValue.parameters={...HidingBarLabelValue.parameters,docs:{...HidingBarLabelValue.parameters?.docs,source:{originalSource:"{\n  args: {\n    barChartProps: {\n      subLabelWidth: 130\n    },\n    barKeys: defaultBarKeys,\n    data: [{\n      '2019': 15500,\n      '2019a': 250,\n      '2019b': 250,\n      '2020': 250,\n      '2020a': 300,\n      '2020b': 600,\n      '2021': 600,\n      '2021a': 300,\n      '2021b': 0,\n      name: 'Community College of Allegheny County Boyce Campus'\n    }]\n  }\n}",...HidingBarLabelValue.parameters?.docs?.source}}},UngroupedStackedBarChart.parameters={...UngroupedStackedBarChart.parameters,docs:{...UngroupedStackedBarChart.parameters?.docs,source:{originalSource:"{\n  args: {\n    barKeys: [['2019', '2019a', '2019b']],\n    data: defaultData\n  }\n}",...UngroupedStackedBarChart.parameters?.docs?.source}}},VerticalBarChart.parameters={...VerticalBarChart.parameters,docs:{...VerticalBarChart.parameters?.docs,source:{originalSource:"(args: StackedBarChartProps, context: StoryContext): React.ReactElement => {\n  const {\n    globals\n  } = context;\n  const subLabelProps = {\n    position: 'bottom'\n  } as StackedBarChartProps['subLabelProps'];\n  const mergedSubLabelProps = getMergedSubLabelProps(subLabelProps, globals);\n  return <StackedBarChart {...args} barChartProps={{\n    chartProps: {\n      layout: 'horizontal',\n      margin: {\n        left: 0\n      }\n    },\n    maxHeight: 'auto',\n    xAxisProps: {\n      axisLine: true,\n      dataKey: 'name',\n      dy: 10,\n      orientation: 'bottom',\n      style: {\n        fill: '#003359',\n        fontSize: '14px',\n        fontWeight: 500\n      },\n      tickLine: false,\n      type: 'category'\n    },\n    yAxisProps: {\n      dataKey: undefined,\n      dx: 0,\n      padding: {\n        bottom: 0,\n        top: 0\n      },\n      style: {\n        fill: '#555',\n        fontSize: '10px'\n      },\n      type: 'number'\n    }\n  }} barKeys={defaultBarKeys} data={defaultData} labelListProps={{\n    position: 'insideTop'\n  }} subLabelProps={mergedSubLabelProps} />;\n}",...VerticalBarChart.parameters?.docs?.source}}},LongLabel.parameters={...LongLabel.parameters,docs:{...LongLabel.parameters?.docs,source:{originalSource:"{\n  args: {\n    barKeys: defaultBarKeys,\n    data: longLabelData\n  }\n}",...LongLabel.parameters?.docs?.source}}},LongSublabel.parameters={...LongSublabel.parameters,docs:{...LongSublabel.parameters?.docs,source:{originalSource:"{\n  args: {\n    barKeys: longBarKeys,\n    data: longSubLabelData\n  }\n}",...LongSublabel.parameters?.docs?.source}}}}}]);
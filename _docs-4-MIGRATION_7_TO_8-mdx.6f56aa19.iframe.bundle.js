"use strict";(self.webpackChunk_actinc_dls=self.webpackChunk_actinc_dls||[]).push([[4936],{"./node_modules/@mdx-js/react/lib/index.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{R:()=>useMDXComponents,x:()=>MDXProvider});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),react__WEBPACK_IMPORTED_MODULE_0___default=__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);const emptyComponents={},MDXContext=react__WEBPACK_IMPORTED_MODULE_0___default().createContext(emptyComponents);function useMDXComponents(components){const contextComponents=react__WEBPACK_IMPORTED_MODULE_0___default().useContext(MDXContext);return react__WEBPACK_IMPORTED_MODULE_0___default().useMemo((function(){return"function"==typeof components?components(contextComponents):{...contextComponents,...components}}),[contextComponents,components])}function MDXProvider(properties){let allComponents;return allComponents=properties.disableParentContext?"function"==typeof properties.components?properties.components(emptyComponents):properties.components||emptyComponents:useMDXComponents(properties.components),react__WEBPACK_IMPORTED_MODULE_0___default().createElement(MDXContext.Provider,{value:allComponents},properties.children)}},"./src/_docs/4.MIGRATION_7_TO_8.mdx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{default:()=>MDXContent});__webpack_require__("./node_modules/react/index.js");var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),lib=__webpack_require__("./node_modules/@mdx-js/react/lib/index.js"),blocks=__webpack_require__("./node_modules/@storybook/addon-docs/dist/blocks.mjs");const MIGRATION_7_TO_8raw_namespaceObject="# Migrating from DLS7 to DLS8\n\n## Breaking Changes\n\nThis release contains a lot of version bumps. Notably, you will need to\nmake the following updates in your project's `package.json` file:\n\n- Bumped the minimum required `@mui/base` version to `5.0.0-beta.40`\n  - Requires `@mui/material` version `5.15.0` or above\n- Bumped the minimum required `@mui/lab` version to `5.0.0-alpha.169`\n\nAside from that, there are technically no breaking changes in this release.\nHowever, out of an abundance of caution, we are shipping DLS8 as a new major\nrelease since it contains a lot of new components (and therefore,\nnew dependencies)!\n\nDLS8 should not increase your bundle size until you import / use these new\ncomponents. But if your bundle analyzer is telling you otherwise, please see\nbelow about revising your import statements or feel free to reach out!\n\n## New Features\n\n- Added a new `ENCOURA` theme, which represents Encoura's primary look and feel\n- Added new chart molecules, which are built using\n  [Recharts](https://recharts.org/):\n  - [AreaChart](/docs/molecules-charts-areachart--documentation)\n  - [BarChart](/docs/molecules-charts-barchart--documentation)\n  - [LineChart](/docs/molecules-charts-linechart--documentation)\n  - [PieChart](/docs/molecules-charts-piechart--documentation)\n  - [OverlappedBarChart](/docs/molecules-charts-overlappedbarchart--documentation)\n  - [ScatterPlot](/docs/molecules-charts-scatterplot--documentation)\n  - [StackedBarChart](/docs/molecules-charts-stackedbarchart--documentation)\n- Added a new `DEFAULT_CHART_COLORS` constant, which contains fallback chart\n  colors that are used when a chart component is not provided with sufficient\n  color information (either through the theme or through props)\n- Added new map molecules, which are built using\n  [Mapbox GL](https://docs.mapbox.com/mapbox-gl-js/guides):\n  - [Map](/docs/molecules-maps-map--documentation)\n  - [CountyMap](/docs/molecules-maps-countymap--documentation)\n  - [GeomarketMap](/docs/molecules-maps-geomarketmap--documentation)\n  - [HeatMap](/docs/molecules-maps-heatmap--documentation)\n  - [SCFMap](/docs/molecules-maps-scfmap--documentation)\n  - [StateMap](/docs/molecules-maps-statemap--documentation)\n- Bumped all dependencies to their latest releases, including MUI to `v5.15.14`\n- Bumped the DLS's Node version to `v20`\n\n## Customizing Charts & Maps\n\nIf you add a chart or map to your project and find that the default color scheme\nis grey, this means that the colors have not been customized (yet)\non your theme.\n\nIn order to customize these colors, e.g. for the `BarChart` component, you can\naugment your `theme.components` section as follows:\n\n```json\n{\n  ...\n  components: {\n    ...\n    DlsBarChart: {\n      defaultProps: {\n        colors: ['red', 'green', '#FF00FF', 'orange', '#00FF00'],\n      },\n    },\n    ...\n  },\n  ...\n}\n```\n\nNow, any time `BarChart` is used within your theme, it will have the above\ncolor scheme pre-configured by default.\n\nLike any other Material UI component, you can override the theme defaults in\norder to handle one-off scenarios:\n\n```tsx\n<BarChart\n  ...\n  colors={['black', 'orange', 'pink']}\n  ...\n/>\n```\n\n## Jest: ReferenceError: TextDecoder is not defined\n\nIf you are seeing the following error while running your Jest unit tests,\nit means that Jest is loading one of the map components into scope and\nneeds TextDecoder to be polyfilled.\n\nIf your project is not using a map component, then you may want to increase the\nspecificity of your DLS import statements to prevent unwanted code from being\nloaded into scope:\n\n```tsx\n// Before:\nimport { Alert } from '@actinc/dls'; // this import statement may load all DLS code into scope\nimport { Alert } from '@actinc/dls/components'; // this import statement may load all DLS components into scope\n\n// After:\nimport { Alert } from '@actinc/dls/components/Alert'; // this import statement only loads the Alert component into scope\n```\n\nIf your project is using a map component, then you can pollyfill TextDecoder\nin your Jest setup file:\n\n```ts\n// jest.setup.ts\n\nimport { TextDecoder } from 'text-encoding';\n\nglobal.TextDecoder = TextDecoder;\n```\n";function _createMdxContent(props){return(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[(0,jsx_runtime.jsx)(blocks.W8,{title:"DLS/DLS8 Migration Guide"}),"\n",(0,jsx_runtime.jsx)(blocks.oz,{children:MIGRATION_7_TO_8raw_namespaceObject})]})}function MDXContent(props={}){const{wrapper:MDXLayout}={...(0,lib.R)(),...props.components};return MDXLayout?(0,jsx_runtime.jsx)(MDXLayout,{...props,children:(0,jsx_runtime.jsx)(_createMdxContent,{...props})}):_createMdxContent()}}}]);